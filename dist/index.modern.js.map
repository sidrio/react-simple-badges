{"version":3,"file":"index.modern.js","sources":["../src/index.tsx"],"sourcesContent":["import * as React from 'react'\nimport badges from './data.json'\n\nfunction Badge(\n  props: JSX.IntrinsicAttributes &\n    React.ClassAttributes<HTMLImageElement> &\n    React.ImgHTMLAttributes<HTMLImageElement> & {\n      name: string\n      logoColor?: string\n      label?: string\n      backgroundColor?: string\n    }\n) {\n  const { name, logoColor, label, backgroundColor } = props\n  const hex = '#' + badges[name]\n\n  if (backgroundColor && !isHex(backgroundColor))\n    throw new Error('background color isnt hex color eg. #ffffff')\n\n  const encodedName =\n    label || name.replace(/-/g, '--').replace(/_/g, '__').replace(/ /g, '_')\n\n  const src = encodeURI(\n    `https://img.shields.io/badge/${encodedName} -${\n      backgroundColor || hex\n    }.svg?&style=flat-square&logo=${name}&logoColor=${logoColor || 'white'}`\n  ).replace(/#/g, '%23')\n\n  const customProps = ['name', 'logoColor', 'label', 'backgroundColor']\n\n  const imgProps = removeItems(props, customProps)\n\n  return <img src={src} alt={props.name} {...imgProps} />\n}\n\nconst isHex = (color: string): boolean => /^#[0-9A-Fa-f]{6}$/i.test(color)\n\nconst removeItems = (props: any, customProps: any) =>\n  Object.keys(props).reduce((object, key) => {\n    if (!customProps.includes(key)) {\n      object[key] = props[key]\n    }\n    return object\n  }, {})\n\nexport default Badge\n"],"names":["Badge","props","name","logoColor","label","backgroundColor","hex","badges","isHex","Error","encodedName","replace","src","encodeURI","customProps","imgProps","removeItems","React","alt","color","test","Object","keys","reduce","object","key","includes"],"mappingssCF,MAAtCE;MAAWC,QAA2BH,MAA3BG;MAAOC,kBAAoBJ,MAApBI;AAChC,MAAMC,GAAG,GAAG,MAAMC,MAAM,CAACL,IAAD,CAAxB;AAEA,MAAIG,eAAe,IAAI,CAACG,KAAK,CAACH,eAAD,CAA7B,EACE,MAAM,IAAII,KAAJ,CAAU,6CAAV,CAAN;AAEF,MAAMC,WAAW,GACfN,KAAK,IAAIF,IAAI,CAACS,OAAL,CAAa,IAAb,EAAmB,IAAnB,EAAyBA,OAAzB,CAAiC,IAAjC,EAAuC,IAAvC,EAA6CA,OAA7C,CAAqD,IAArD,EAA2D,GAA3D,CADX;AAGA,MAAMC,GAAG,GAAGC,SAAS,mCACaH,WADb,WAEjBL,eAAe,IAAIC,GAFF,wCAGeJ,IAHf,oBAGiCC,SAAS,IAAI,OAH9C,EAAT,CAIVQ,OAJU,CAIF,IAJE,EAII,KAJJ,CAAZ;AAMA,MAAMG,WAAW,GAAG,CAAC,MAAD,EAAS,WAAT,EAAsB,OAAtB,EAA+B,iBAA/B,CAApB;AAEA,MAAMC,QAAQ,GAAGC,WAAW,CAACf,KAAD,EAAQa,WAAR,CAA5B;AAEA,SAAOG,aAAA,MAAA;AAAKL,IAAAA,GAAG,EAAEA;AAAKM,IAAAA,GAAG,EAAEjB,KAAK,CAACC;KAAUa,SAApC,CAAP;AACD;;AAED,IAAMP,KAAK,GAAG,SAARA,KAAQ,CAACW,KAAD;AAAA,SAA4B,qBAAqBC,IAArB,CAA0BD,KAA1B,CAA5B;AAAA,CAAd;;AAEA,IAAMH,WAAW,GAAG,SAAdA,WAAc,CAACf,KAAD,EAAaa,WAAb;AAAA,SAClBO,MAAM,CAACC,IAAP,CAAYrB,KAAZ,EAAmBsB,MAAnB,CAA0B,UAACC,MAAD,EAASC,GAAT;AACxB,QAAI,CAACX,WAAW,CAACY,QAAZ,CAAqBD,GAArB,CAAL,EAAgC;AAC9BD,MAAAA,MAAM,CAACC,GAAD,CAAN,GAAcxB,KAAK,CAACwB,GAAD,CAAnB;AACD;;AACD,WAAOD,MAAP;AACD,GALD,EAKG,EALH,CADkB;AAAA,CAApB;;;;"}